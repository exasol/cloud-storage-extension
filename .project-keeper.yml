sources:
  - type: maven
    path: pom.xml
    modules:
      - jar_artifact
      - integration_tests
  - type: npm
    path: extension/package.json
    artifacts:
      - dist/cloud-storage-extension.js
version:
  fromSource: pom.xml
linkReplacements:
excludes:
  # Project is written in Scala, no need to test with next Java version
  - "E-PK-CORE-18: Outdated content: '.github/workflows/ci-build-next-java.yml'"
build:
  runnerOs: ubuntu-20.04
  freeDiskSpace: true
  exasolDbVersions:
    - "8.32.0"
    - "7.1.30"
  workflows:
    - name: ci-build.yml
      stepCustomizations:
        - action: INSERT_AFTER
          job: matrix-build
          stepId: enable-testcontainer-reuse
          content:
            name: Run scalafix linting
            id: run-scalafix-linting
            if: ${{ matrix.exasol_db_version == env.DEFAULT_EXASOL_DB_VERSION }}
            run: mvn --batch-mode clean compile test-compile scalastyle:check scalafix:scalafix spotless:check
        - action: INSERT_AFTER
          job: matrix-build
          stepId: run-scalafix-linting
          content:
            name: Build extension
            id: build-extension
            run: |
              # Packaged JAR is required for building the extension
              mvn --batch-mode package -DskipTests
              cd extension
              npm ci
              npm run build
              npm run test
              npm run lint
        - action: REPLACE
          job: matrix-build
          stepId: build-pk-verify
          content:
            name: Run tests and build with Maven
            id: build-pk-verify
            # Omit clean to speedup build
            run: mvn --batch-mode verify -Dcom.exasol.dockerdb.image=${{ matrix.exasol_db_version }}
            env:
              # Set additional environment variable as in scala projects the scalatest plugin does not forward
              # the system property -Dcom.exasol.dockerdb.image to the test's implementation.
              EXASOL_DB_VERSION: ${{ matrix.exasol_db_version }}

    - name: release.yml
      stepCustomizations:
        - action: INSERT_AFTER
          stepId: verify-release
          content:
            name: Build extension
            id: build-extension
            run: |
              # Packaged JAR is required for building the extension
              mvn --batch-mode package -DskipTests
              cd extension
              npm ci
              npm run build
        - action: REPLACE
          stepId: build
          content:
            name: Build project
            id: build
            # Omit clean to speedup build. Tests already ran durning CI build.
            run: mvn --batch-mode -DskipTests verify
